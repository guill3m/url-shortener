import React, { useState } from 'react'

export default function Home () {
  const [isLoading, setIsLoading] = useState(false)
  const [responseStatus, setResponseStatus] = useState(0)
  const [successMessage, setSuccessMessage] = useState(null)
  const [errorMessageName, setErrorMessageName] = useState(null)
  const [errorMessageDescription, setErrorMessageDescription] = useState(null)

  const handleFormSubmission = async (event) => {
    event.preventDefault()
    setIsLoading(true)
    const { target: { original, short } } = event
    await fetch('/api/make', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        original: original.value,
        short: short.value === '' ? null : short.value,
      }),
    })
      .then((response) => {
        setResponseStatus(response.status)
        return response.json()
      })
      .then(({ error, message }) => {
        if (error) {
          setErrorMessageName(error.name)
          setErrorMessageDescription(error.description)
        }
        if (message) {
          setSuccessMessage(message)
        }
      })
      .finally(() => {
        setIsLoading(false)
      })
  }

  return (
    <main>
      <h1>URL Shortener</h1>
      <form
        action='/api/make'
        method='post'
        onSubmit={handleFormSubmission}
      >
        <label htmlFor='original-url-input'>
          Original URL:
        </label>
        <input
          id='original-url-input'
          disabled={isLoading}
          name='original'
          required
          type='url'
        />
        <label htmlFor='short-url-id-input'>
          Short URL ID:
        </label>
        <input
          id='short-url-id-input'
          disabled={isLoading}
          name='short'
          pattern='[a-z0-9]+'
          placeholder='Leave blank for autogenerated'
          type='text'
        />
        {responseStatus === 200 && (
          <p className='response success'>
            ✅ {successMessage}
          </p>
        )}
        {responseStatus > 399 && (
          <p className='response error'>
            ❌ <strong>{errorMessageName}:</strong> {errorMessageDescription}
          </p>
        )}
        <button
          disabled={isLoading}
          type='submit'
        >
          Make Short Url
        </button>
      </form>
    </main>
  )
}
